{"version":3,"file":"static/js/659.a3a7e29e.chunk.js","mappings":"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","sources":["pages/SignupPage/SignupPage.jsx"],"sourcesContent":["import {\n  Container,\n  CssBaseline,\n  Box,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Link,\n} from '@mui/material';\n\nimport { useSignupUserMutation } from 'redux/api/contacts/users/usersApi';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials } from 'redux/api/contacts/users/authSlice';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function SignupPages() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [signup] = useSignupUserMutation();\n  const dispatch = useDispatch();\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'name':\n        setUserName(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const user = { email, password, name: userName };\n    const response = await signup(user);\n\n    if (response.data) {\n      dispatch(setCredentials(response.data));\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"User name\"\n            name=\"name\"\n            autoFocus\n            value={userName}\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={handleChange}\n            inputProps={{\n              inputMode: 'email',\n              pattern:\n                '^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-]+)(\\\\.[a-zA-Z]{2,5}){1,2}$',\n              title: 'Incorrect mail address',\n            }}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={handleChange}\n            inputProps={{\n              pattern: '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$',\n              title:\n                'Minimum eight characters, at least one letter and one number',\n            }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Link href=\"/goit-react-hw-08-phonebook/login\" variant=\"body2\">\n            {'Do you have an account? Log in'}\n          </Link>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["SignupPages","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","userName","setUserName","_useSignupUserMutatio","useSignupUserMutation","signup","dispatch","useDispatch","handleChange","event","_event$target","target","name","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","response","wrap","_context","prev","next","preventDefault","sent","data","setCredentials","stop","_x","apply","arguments","_jsxs","Container","component","maxWidth","children","_jsx","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","onSubmit","mt","TextField","margin","required","fullWidth","label","autoFocus","onChange","autoComplete","inputProps","inputMode","pattern","title","type","id","Button","mb","Link","href"],"sourceRoot":""}