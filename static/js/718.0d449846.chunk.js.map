{"version":3,"file":"static/js/718.0d449846.chunk.js","mappings":"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","sources":["modules/Contacts/ContactsItem/ContactsItem.styled.jsx","modules/Contacts/ContactsItem/ContactsItem.jsx","modules/Contacts/Contacts.jsx","modules/DialogAddContact/DialogAddContact.styled.jsx","modules/DialogAddContact/DialogAddContact.jsx","pages/ContactsPages/ContactsPages.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { ListItem } from '@mui/material';\nexport const Contact = styled(ListItem)(({ theme }) => ({\n  boxShadow: theme.shadows[2],\n  // maxWidth: 360,\n  border: 1,\n}));\n","import { Contact } from './ContactsItem.styled';\nimport { ListItemText, IconButton, CircularProgress } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDeleteContactsMutation } from 'redux/api/contacts/contacts/contactsApi';\nimport { toast } from 'react-toastify';\n\nfunction ContactsItem({ id, name, phone }) {\n  const [deleteContact, { isLoading: isDeleting }] =\n    useDeleteContactsMutation();\n\n  const onDelete = async id => {\n    const response = await deleteContact(id);\n    if (response.error) {\n      toast.error('Oops! Something went wrong');\n      return;\n    }\n\n    toast.info('Contact deleted');\n  };\n\n  return (\n    <Contact\n      secondaryAction={\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onDelete(id)}>\n          {isDeleting ? <CircularProgress size={24} /> : <DeleteIcon />}\n        </IconButton>\n      }\n    >\n      <ListItemText primary={name} secondary={phone} />\n    </Contact>\n  );\n}\n\nexport default ContactsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from '@mui/material';\nimport ContactsItem from './ContactsItem/ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filters/filtersSlice';\n\nfunction Contacts({ contacts }) {\n  const filterValue = useSelector(getFilterValue);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <List sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n      {getFilteredContacts().map(({ id, name, number }) => (\n        <ContactsItem\n          key={id}\n          id={id}\n          name={name}\n          phone={number}\n        ></ContactsItem>\n      ))}\n    </List>\n  );\n}\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\nexport const Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '20px',\n});\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Box,\n} from '@mui/material';\nimport { Form } from './DialogAddContact.styled';\n\nimport { useAddContactsMutation } from 'redux/api/contacts/contacts/contactsApi';\nimport { toast } from 'react-toastify';\nfunction DialogAddContact({ contacts, isOpen, onClose }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContacts, { isLoading: isPosting }] = useAddContactsMutation();\n  const resetState = () => {\n    setName('');\n    setNumber('');\n    onClose();\n  };\n\n  const checkingDuplicate = newName => {\n    return contacts.find(({ name }) => name === newName);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (checkingDuplicate(name)) {\n      toast.error(`Contact ${name} already exists`);\n      return;\n    }\n    const response = await addContacts({\n      number,\n      name,\n    });\n\n    if (response.error) {\n      toast.error('Oops! Something went wrong');\n      return;\n    }\n\n    toast.info('New contact added');\n    onClose();\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const isDisableAdd = name && number;\n  return (\n    <Dialog open={isOpen} onClose={resetState} fullWidth={true}>\n      <DialogTitle>Add new contact</DialogTitle>\n      <DialogContent>\n        <Form onSubmit={handleSubmit}>\n          <TextField\n            label=\"Name\"\n            variant=\"standard\"\n            value={name}\n            onChange={handleChange}\n            inputProps={{\n              pattern:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              title:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            }}\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n          <TextField\n            label=\"Number\"\n            variant=\"standard\"\n            value={number}\n            onChange={handleChange}\n            inputProps={{\n              pattern:\n                '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n              title:\n                'number number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            }}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n\n          <Box justifyContent=\"right\" display=\"flex\" gap=\"20px\">\n            <Button disabled={!isDisableAdd} type=\"submit\">\n              Add\n            </Button>\n            <Button disabled={isPosting} onClick={resetState}>\n              Cancel\n            </Button>\n          </Box>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nDialogAddContact.propTypes = {\n  onClose: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  isOpen: PropTypes.bool,\n};\n\nexport default DialogAddContact;\n","import { LinearProgress, Fab } from '@mui/material';\nimport Contacts from 'modules/Contacts/Contacts';\nimport { Add } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { useGetContactsQuery } from 'redux/api/contacts/contacts/contactsApi';\nimport DialogAddContact from 'modules/DialogAddContact/DialogAddContact';\nexport default function ContactsPages() {\n  const [isOpenDialog, setIsOpenDialog] = useState(false);\n  const { data: contacts, isFetching } = useGetContactsQuery();\n\n  const onClose = () => {\n    setIsOpenDialog(false);\n  };\n  return (\n    <main>\n      <section>\n        {isFetching && <LinearProgress />}\n        {contacts && <Contacts contacts={contacts} />}\n        <Fab\n          sx={{ position: 'sticky', bottom: 20 }}\n          aria-label={'Add contact'}\n          color={'primary'}\n          onClick={() => {\n            setIsOpenDialog(true);\n          }}\n        >\n          <Add />\n        </Fab>\n        <DialogAddContact\n          isOpen={isOpenDialog}\n          onClose={onClose}\n          contacts={contacts}\n        />\n      </section>\n    </main>\n  );\n}\n"],"names":["Contact","styled","ListItem","_ref","boxShadow","theme","shadows","border","id","name","phone","_useDeleteContactsMut","useDeleteContactsMutation","_useDeleteContactsMut2","_slicedToArray","deleteContact","isDeleting","isLoading","onDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","error","toast","abrupt","stop","_x","apply","arguments","_jsx","secondaryAction","IconButton","edge","onClick","children","CircularProgress","size","DeleteIcon","ListItemText","primary","secondary","contacts","filterValue","useSelector","getFilterValue","List","sx","display","flexWrap","gap","normalizedFilter","toLowerCase","filter","contact","includes","getFilteredContacts","map","number","ContactsItem","Form","flexDirection","isOpen","onClose","_useState","useState","_useState2","setName","_useState3","_useState4","setNumber","_useAddContactsMutati","useAddContactsMutation","_useAddContactsMutati2","addContacts","isPosting","resetState","checkingDuplicate","newName","find","handleSubmit","_ref3","e","preventDefault","concat","handleChange","_e$target","target","value","isDisableAdd","_jsxs","Dialog","open","fullWidth","DialogTitle","DialogContent","onSubmit","TextField","label","variant","onChange","inputProps","pattern","title","type","required","Box","justifyContent","Button","disabled","ContactsPages","isOpenDialog","setIsOpenDialog","_useGetContactsQuery","useGetContactsQuery","data","isFetching","LinearProgress","Contacts","Fab","position","bottom","color","Add","DialogAddContact"],"sourceRoot":""}